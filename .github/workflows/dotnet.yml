name: Build

on:
  create:
    branches: 
      - release/**
    tags:
      - 'v*'
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    
jobs:
  build:
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'pansynchro.sln'
      PANSQL: 'PanSQL/Pansynchro.PanSQL.sln'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Test env
      run: env
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.2.0
      with:
        nuget-version: 'latest'

    - name: Restore dependencies
      uses: nick-fields/retry@v2.8.3
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: nuget restore $env:SOLUTION

    - name: Restore PanSQL dependencies
      uses: nick-fields/retry@v2.8.3
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: nuget restore $env:PANSQL

    - name: Build
      run: dotnet build $env:SOLUTION --configuration $env:BUILD_CONFIG --no-restore

    - name: Build2
      run: dotnet build $env:PANSQL --configuration $env:BUILD_CONFIG --no-restore

    - name: Run tests
      run: dotnet test /p:Configuration=$env:BUILD_CONFIG --no-restore --no-build --verbosity normal
      
    - name: Run PanSQL tests
      run: dotnet test $env:PANSQL /p:Configuration=$env:BUILD_CONFIG --no-restore --no-build --verbosity normal
      
    - name: Publish
      if: startsWith(github.ref, 'refs/heads/release')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}} -SkipDuplicate

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: true
          prerelease: true
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      BUILD_CONFIG: 'Release'
      PANSQL: 'PanSQL/Pansynchro.PanSQL.sln'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: osx
          - os: windows-latest
            platform: win
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test env
        run: env

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
  
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0
        with:
          nuget-version: 'latest'
  
      - name: Restore PanSQL dependencies
        uses: nick-fields/retry@v2.8.3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: nuget restore PanSQL/Pansynchro.PanSQL.sln

      - name: Build
        run: dotnet build PanSQL/Pansynchro.PanSQL.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./PanSQL/Pansynchro.PanSQL/Pansynchro.PanSQL.csproj --os ${{ matrix.platform }} -o ./BuildResult -c Release

      - name: Zip
        uses: vimtor/action-zip@v1.1
        with:
          files: ./BuildResult/
          dest: PanSQL_${{github.ref}}.${{ matrix.platform }}.zip
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: PanSQL_${{github.ref}}.${{ matrix.platform }}.zip
